matrix(lookup,nrow=9,byrow=T)
}
# O valor de numberSymbols varia de 3 a 10
breakpoints<-function(numberSymbols){
numberSymbols = numberSymbols - 2
lookup = lookupTable()
na.omit(lookup[,numberSymbols])
}
zNormalization<-function(series){
(series - mean(series))/sd(series)
}
saxPlot<-function(series,numberSymbols,size){
letters = c("a","b","c","d","e","f","g","h","j","k")
sax = ""
series = zNormalization(series)
segm = rep(0,size+1)
Psax = rep(0,size)
segm[1:size] = paa(series,size)
segm[size+1] = segm[size]
point = breakpoints(numberSymbols)
for(i in 1:size){
aux = 0
for(j in 1:length(point)){
if(segm[i] <= point[j]){
sax = paste(letters[j],sax,sep="")
Psax[i] = j
aux = 1
break
}
}
if(!aux){
sax = paste(letters[numberSymbols+1],sax,sep="")
Psax[i] = numberSymbols+1
}
}
steps = data.frame(x=vline,y=segm)
print(vline)
p = qplot(geom="line",xlab="Time",ylab="Serie") +
ggtitle("Symbolic Aggregate Approximation") + theme(plot.title = element_text(hjust=0.5)) +
geom_hline(yintercept=point) + geom_step(data=steps,aes(x=x,y=y),colour="black") +
geom_text(aes(x=(vline[1:(length(vline)-1)]+vline[2:length(vline)])/2,y=segm[1:(length(segm)-1)],label=letters[Psax],colour="red"))
plot(p)
print(sax)
}
saxPlot(s,4,9)
download.file("http://www.openintro.org/stat/data/nc.RData",destfile = "nc.RData")
load("nc.RData")
summary(nc)
by(nc$weight nc$habit, mean)
by(nc$weight, nc$habit, mean)
by(nc$weight, nc$habit, length)
inference(y = nc$weight, x = nc$habit, est = "mean", type = "ht", null = 0 , alternative = "twosided", method = "theoretical")
inference(y = nc$weight, x = nc$habit, est = "mean", type = "ci", null = 0 , alternative = "twosided", method = "theoretical")
inference(y = nc$weight, x = nc$habit, est = "mean", type = "ci", null = 0 , alternative = "twosided", method = "theoretical", order = c("smoker", "nonsmoker"))
inference(y = nc$weeks, est = "mean", type = "ci", null = 0 , alternative = "twosided", method = "theoretical")
inference(y = nc$weeks, est = "mean", type = "ci", null = 0 , alternative = "twosided", method = "theoretical", confele)
inference(y = nc$weeks, est = "mean", type = "ci", null = 0 , alternative = "twosided", method = "theoretical", conflevel = 0.90)
38.1528 - 38.5165
38.182-38.4873
inference(y = nc$gained, y = nc$mature, est = "mean", type = "ht", null = 0 , alternative = "twosided", method = "theoretical")
inference(y = nc$gained, x = nc$mature, est = "mean", type = "ht", null = 0 , alternative = "twosided", method = "theoretical")
inference(y = nc$gained, x = nc$lowbirthweight, est = "mean", type = "ht", null = 0 , alternative = "twosided", method = "theoretical")
nc$mature
inference(y = nc$mage, x = nc$mature, est = "mean", type = "ht", null = 0 , alternative = "twosided", method = "theoretical")
length(nc)
dim(nc)
nc[1]
nc$mature[1]
mode(nc$mature[1])
nc$mature[1] == "younger mom"
SomaIdade = 0
mulheres = 0
for(i in 1:(dim(nc)[1])){
if(nc$mature[i] == "younger mom"){
SomaIdade = SomaIdade + 1
mulheres = mulheres + 1
}
}
SomaIdade/mulheres
SomaIdade = 0
mulheres = 0
for(i in 1:(dim(nc)[1])){
if(nc$mature[i] == "younger mom"){
SomaIdade = SomaIdade + 1
mulheres = mulheres + 1
}
}
media = SomaIdade/mulheres
meida
media
SomaIdade = 0
mulheres = 0
for(i in 1:(dim(nc)[1])){
if(nc$mature[i] == "younger mom"){
SomaIdade = SomaIdade + nc$mage
mulheres = mulheres + 1
}
}
media = SomaIdade/mulheres
media
SomaIdade = 0
mulheres = 0
for(i in 1:(dim(nc)[1])){
if(nc$mature[i] == "younger mom"){
SomaIdade = SomaIdade + nc$mage[i]
mulheres = mulheres + 1
}
}
media = SomaIdade/mulheres
media
for(i in 1:(dim(nc)[1])){
if(nc$mature[i] == "younger mom"){
if(maior<nc$mage[i]){
maior = nc$mage[i]
}
}
}
maior
maior = 0
for(i in 1:(dim(nc)[1])){
if(nc$mature[i] == "younger mom"){
if(maior<nc$mage[i]){
maior = nc$mage[i]
}
}
}
maior
maior = 0
menor = 10000000
for(i in 1:(dim(nc)[1])){
if(nc$mature[i] == "younger mom"){
if(maior<nc$mage[i]){
maior = nc$mage[i]
}
}else{
if(menor>nc$mage){
menor = nc$mage
}
}
}
maior
menor
maior = 0
menor = 10000000
for(i in 1:(dim(nc)[1])){
if(nc$mature[i] == "younger mom"){
if(maior<nc$mage[i]){
maior = nc$mage[i]
}
}else{
if(menor>nc$mage[i]){
menor = nc$mage[i]
}
}
}
maior
menor
help(vline)
help(geom_line)
help(geom_hline)
help("qqline")
tempo1 <- c(1.5,2.0,2.4,3.0,4.0,5.0,6.0,8.0,9.0,11.0,13.0,15.0,18.0,22.0,30.0,91.0)
ddp1 <- c(0.5,1.06,1.56,1.97,2.50,2.98,3.42,4.09,4.52,5.09,5.57,6.06,6.58,7.00,7.52,7.99)
tempo2 <- c(1.00,2.00,2.50,3.00,4.00,5.00,6.00,7.00,9.00,10.00,12.00,14.00,18.00,22.00,29.00,75.00)
ddp2 <- c(7.46,6.99,6.50,5.93,5.41,4.94,4.51,3.93,3.43,2.99,2.50,2.00,1.46,0.98,0.49,0.01)
qplot(x=tempo1,y=ddp1,geom="line",xlab="Tempo (s)",ylab="DDP (v)") +
ggtitle("Evolução do carga ao longo do tempo") + theme(plot.title = element_text(hjust=0.5))
library(ggplot2)
tempo1 <- c(1.5,2.0,2.4,3.0,4.0,5.0,6.0,8.0,9.0,11.0,13.0,15.0,18.0,22.0,30.0,91.0)
ddp1 <- c(0.5,1.06,1.56,1.97,2.50,2.98,3.42,4.09,4.52,5.09,5.57,6.06,6.58,7.00,7.52,7.99)
tempo2 <- c(1.00,2.00,2.50,3.00,4.00,5.00,6.00,7.00,9.00,10.00,12.00,14.00,18.00,22.00,29.00,75.00)
ddp2 <- c(7.46,6.99,6.50,5.93,5.41,4.94,4.51,3.93,3.43,2.99,2.50,2.00,1.46,0.98,0.49,0.01)
qplot(x=tempo1,y=ddp1,geom="line",xlab="Tempo (s)",ylab="DDP (v)") +
ggtitle("Evolução do carga ao longo do tempo") + theme(plot.title = element_text(hjust=0.5))
library(ggplot2)
tempo1 <- c(1.5,2.0,2.4,3.0,4.0,5.0,6.0,8.0,9.0,11.0,13.0,15.0,18.0,22.0,30.0,91.0)
ddp1 <- c(0.5,1.06,1.56,1.97,2.50,2.98,3.42,4.09,4.52,5.09,5.57,6.06,6.58,7.00,7.52,7.99)
tempo2 <- c(1.00,2.00,2.50,3.00,4.00,5.00,6.00,7.00,9.00,10.00,12.00,14.00,18.00,22.00,29.00,75.00)
ddp2 <- c(7.46,6.99,6.50,5.93,5.41,4.94,4.51,3.93,3.43,2.99,2.50,2.00,1.46,0.98,0.49,0.01)
qplot(x=tempo2,y=ddp2,geom="line",xlab="Tempo (s)",ylab="DDP (v)") +
ggtitle("Evolução do carga ao longo do tempo") + theme(plot.title = element_text(hjust=0.5))
E = 8
R = 47*10^(3)
C = 2200*10^(-6)
x = c(1:100)
y = E*(1-exp(-1*(x/(RC))))
plot(x,y)
E = 8
R = 47*10^(3)
C = 2200*10^(-6)
x = c(1:100)
y = E*(1-exp(-1*(x/(R*C))))
plot(x,y)
E = 8
R = 47*10^(3)
C = 2200*10^(-6)
x = c(-10:200)
y = E*(1-exp(-1*(x/(R*C))))
qplot(x=x,y=y,geom="line",xlab="Tempo (s)",ylab="DDP (v)") +
ggtitle("Evolução do carga ao longo do tempo - Equação diferencial") + theme(plot.title = element_text(hjust=0.5))
library(ggplot2)
library(ggplot2)
E = 8
R = 47*10^(3)
C = 2200*10^(-6)
x = c(-10:200)
y = E*(1-exp(-1*(x/(R*C))))
qplot(x=x,y=y,geom="line",xlab="Tempo (s)",ylab="DDP (v)") +
ggtitle("Evolução do carga ao longo do tempo - Equação diferencial") + theme(plot.title = element_text(hjust=0.5))
y = 8*(1-exp(-1*(x/(10*34))))
qplot(x=x,y=y,geom="line",xlab="Tempo (s)",ylab="DDP (v)") +
ggtitle("Evolução do carga ao longo do tempo - Equação diferencial") + theme(plot.title = element_text(hjust=0.5))
exp(1)
exp(-1)
E = v0 = 8
R = 47*10^(3)
C = 2200*10^(-6)
x = c(-10:200)
yC = E*(1-exp(-1*(x/(R*C))))
yd = (v0*C)*((exp(-1*(x/(R*C))))/C)
qplot(x=x,y=yd,geom="line",xlab="Tempo (s)",ylab="DDP (v)") +
ggtitle("Evolução do carga ao longo do tempo - Equação diferencial") + theme(plot.title = element_text(hjust=0.5))
E = v0 = 8
R = 47*10^(3)
C = 2200*10^(-6)
x = c(-10:200)
yC = E*(1-exp(-1*(x/(R*C))))
yd = (v0*C)*((exp(-1*(x/(R*C))))/C)
qplot(x=x,y=yd,geom="line",xlab="Tempo (s)",ylab="DDP (v)") +
ggtitle("Carga ao longo do tempo - Equação diferencial") + theme(plot.title = element_text(hjust=0.5))
E = v0 = 8
R = 47*10^(3)
C = 2200*10^(-6)
x = c(-10:200)
yC = E*(1-exp(-1*(x/(R*C))))
yd = (v0*C)*((exp(-1*(x/(R*C))))/C)
qplot(x=x,y=yc,geom="line",xlab="Tempo (s)",ylab="DDP (v)") +
ggtitle("Carga ao longo do tempo - Equação diferencial") + theme(plot.title = element_text(hjust=0.5))
E = v0 = 8
R = 47*10^(3)
C = 2200*10^(-6)
x = c(-10:200)
yC = E*(1-exp(-1*(x/(R*C))))
yd = (v0*C)*((exp(-1*(x/(R*C))))/C)
qplot(x=x,y=yc,geom="line",xlab="Tempo (s)",ylab="DDP (v)") +
ggtitle("Carga ao longo do tempo - Equação diferencial") + theme(plot.title = element_text(hjust=0.5))
E = v0 = 8
R = 47*10^(3)
C = 2200*10^(-6)
x = c(-10:200)
yC = E*(1-exp(-1*(x/(R*C))))
E = v0 = 8
R = 47*10^(3)
C = 2200*10^(-6)
x = c(-10:200)
yc = E*(1-exp(-1*(x/(R*C))))
yd = (v0*C)*((exp(-1*(x/(R*C))))/C)
qplot(x=x,y=yc,geom="line",xlab="Tempo (s)",ylab="DDP (v)") +
ggtitle("Carga ao longo do tempo - Equação diferencial") + theme(plot.title = element_text(hjust=0.5))
E = v0 = 8
R = 4.7*10^(3)
C = 2200*10^(-6)
x = c(-10:200)
yc = E*(1-exp(-1*(x/(R*C))))
yd = (v0*C)*((exp(-1*(x/(R*C))))/C)
qplot(x=x,y=yc,geom="line",xlab="Tempo (s)",ylab="DDP (v)") +
ggtitle("Carga ao longo do tempo - Equação diferencial") + theme(plot.title = element_text(hjust=0.5))
E = v0 = 8
R = 4.7*10^(3)
C = 2200*10^(-6)
x = c(-10:200)
yc = E*(1-exp(-1*(x/(R*C))))
yd = (v0*C)*((exp(-1*(x/(R*C))))/C)
qplot(x=x,y=yd,geom="line",xlab="Tempo (s)",ylab="DDP (v)") +
ggtitle("Carga ao longo do tempo - Equação diferencial") + theme(plot.title = element_text(hjust=0.5))
E = v0 = 8
R = 4.7*10^(3)
C = 2200*10^(-6)
x = c(0:100)
yc = E*(1-exp(-1*(x/(R*C))))
yd = (v0*C)*((exp(-1*(x/(R*C))))/C)
qplot(x=x,y=yc,geom="line",xlab="Tempo (s)",ylab="DDP (v)") +
ggtitle("Carga ao longo do tempo - Equação diferencial") + theme(plot.title = element_text(hjust=0.5))
library(ggplot2)
library(ggplot2)
E = v0 = 8
R = 4.7*10^(3)
C = 2200*10^(-6)
x = c(0:100)
yc = E*(1-exp(-1*(x/(R*C))))
yd = (v0*C)*((exp(-1*(x/(R*C))))/C)
qplot(x=x,y=yc,geom="line",xlab="Tempo (s)",ylab="DDP (v)") +
ggtitle("Carga ao longo do tempo - Equação diferencial") + theme(plot.title = element_text(hjust=0.5))
E = v0 = 8
R = 4.7*10^(3)
C = 2200*10^(-6)
x = c(0:100)
yc = E*(1-exp(-1*(x/(R*C))))
yd = (v0*C)*((exp(-1*(x/(R*C))))/C)
qplot(x=x,y=yd,geom="line",xlab="Tempo (s)",ylab="DDP (v)") +
ggtitle("Carga ao longo do tempo - Equação diferencial") + theme(plot.title = element_text(hjust=0.5))
E = v0 = 8
R = 4.7*10^(3)
C = 2200*10^(-6)
x = c(0:100)
yc = E*(1-exp(-1*(x/(R*C))))
yd = (v0*C)*((exp(-1*(x/(R*C))))/C)
qplot(x=x,y=yd,geom="line",xlab="Tempo (s)",ylab="DDP (v)")
ggtitle("Descarga ao longo do tempo - Equação diferencial") + theme(plot.title = element_text(hjust=0.5))
E = v0 = 8
R = 4.7*10^(3)
C = 2200*10^(-6)
x = c(0:100)
yc = E*(1-exp(-1*(x/(R*C))))
yd = (v0*C)*((exp(-1*(x/(R*C))))/C)
qplot(x=x,y=yd,geom="line",xlab="Tempo (s)",ylab="DDP (v)", color = "blue") + geom_line(aes(x=tempo1,y=ddp1),color = "red")
ggtitle("Carga ao longo do tempo - Equação diferencial") + theme(plot.title = element_text(hjust=0.5))
E = v0 = 8
R = 4.7*10^(3)
C = 2200*10^(-6)
x = c(0:100)
yc = E*(1-exp(-1*(x/(R*C))))
yd = (v0*C)*((exp(-1*(x/(R*C))))/C)
qplot(x=x,y=yd,geom="line",xlab="Tempo (s)",ylab="DDP (v)", col = "blue") + geom_line(aes(x=tempo1,y=ddp1),col = "red")
ggtitle("Carga ao longo do tempo - Equação diferencial") + theme(plot.title = element_text(hjust=0.5))
E = v0 = 8
R = 4.7*10^(3)
C = 2200*10^(-6)
x = c(0:100)
yc = E*(1-exp(-1*(x/(R*C))))
yd = (v0*C)*((exp(-1*(x/(R*C))))/C)
qplot(x=x,y=yc,geom="line",xlab="Tempo (s)",ylab="DDP (v)") + geom_line(aes(x=tempo1,y=ddp1),col = "red")
ggtitle("Carga ao longo do tempo - Equação diferencial") + theme(plot.title = element_text(hjust=0.5))
E = v0 = 8
R = 4.7*10^(3)
C = 2200*10^(-6)
x = c(0:100)
yc = E*(1-exp(-1*(x/(R*C))))
yd = (v0*C)*((exp(-1*(x/(R*C))))/C)
qplot(x=x,y=yc,geom="line",xlab="Tempo (s)",ylab="DDP (v)") + geom_line(aes(x=tempo1,y=ddp1),col = "yellow")
ggtitle("Carga ao longo do tempo - Equação diferencial") + theme(plot.title = element_text(hjust=0.5))
E = v0 = 8
R = 4.7*10^(3)
C = 2200*10^(-6)
x = c(0:100)
yc = E*(1-exp(-1*(x/(R*C))))
yd = (v0*C)*((exp(-1*(x/(R*C))))/C)
qplot(x=x,y=yc,geom="line",xlab="Tempo (s)",ylab="DDP (v)") + geom_line(aes(x=tempo1,y=ddp1),col = "pink")
ggtitle("Carga ao longo do tempo - Equação diferencial") + theme(plot.title = element_text(hjust=0.5))
E = v0 = 8
R = 4.7*10^(3)
C = 2200*10^(-6)
x = c(0:100)
yc = E*(1-exp(-1*(x/(R*C))))
yd = (v0*C)*((exp(-1*(x/(R*C))))/C)
qplot(x=x,y=yc,geom="line",xlab="Tempo (s)",ylab="DDP (v)") + geom_line(aes(x=tempo1,y=ddp1),col = "blue")
ggtitle("Carga ao longo do tempo - Equação diferencial") + theme(plot.title = element_text(hjust=0.5))
E = v0 = 8
R = 4.7*10^(3)
C = 2200*10^(-6)
x = c(0:100)
yc = E*(1-exp(-1*(x/(R*C))))
yd = (v0*C)*((exp(-1*(x/(R*C))))/C)
qplot(x=x,y=yd,geom="line",xlab="Tempo (s)",ylab="DDP (v)") + geom_line(aes(x=tempo2,y=ddp2),col = "blue")
ggtitle("Descarga ao longo do tempo - Equação diferencial") + theme(plot.title = element_text(hjust=0.5))
qplot(x=tempo2,y=ddp2,geom="line",xlab="Tempo (s)",ylab="DDP (v)") +
ggtitle("Evolução da descarga ao longo do tempo") + theme(plot.title = element_text(hjust=0.5))
qplot(x=tempo1,y=ddp1,geom="line",xlab="Tempo (s)",ylab="DDP (v)") +
ggtitle("Evolução da carga ao longo do tempo") + theme(plot.title = element_text(hjust=0.5))
download.file("http://wwww.openintro.org/stat/data/atheism.RData")
download.file("http://wwww.openintro.org/stat/data/atheism.RData",destfile = "atheism.RData")
load("atheism.RData")
load("atheism.RData")
source("atheism.RData")
download.file("http://wwww.openintro.org/stat/data/atheism.RData",destfile = "atheism.RData")
load("atheism.RData")
source("atheism.RData")
download.file("http://wwww.openintro.org/stat/data/atheism.RData",destfile = "abc.RData")
load("abc.RData")
download.file("http://www.openintro.org/stat/atheism.RData",destfile = "atheism.RData")
download.file("http://www.openintro.org/stat/data/atheism.RData",destfile = "atheism.RData")
load("atheism.RData")
atheism
dim(atheism)
head
head(atheism)
atheism[1]
head
head(atheism)
dim(atheism)
atheism[45]
atheism[1][45]
atheism[800]
atheism[response]
data.frame(atheism)
data.frame(atheism)[600]
data.frame(atheism,600)
inference
us12<- subset(atheism, atheism$nationality == "United States" & atheism$year == "2012")
inference(y = us12$response,est="proportion",type)
inference(y = us12$response,est="proportion",type="ci",method = "theoretical",success = "atheism")
inference(y = us12$response,est="proportion",type="ci",method = "theoretical",success = "atheist")
espanha = subset(atheism$nationality=="Spanish")
espanha = subset(atheism,atheism$nationality=="Spanish")
dim(espanha)
atheism$nationality
atheism$nationality[6000]
atheism$nationality[7000]
atheism$nationality[8000]
atheism$nationality[8060]
atheism$nationality[9000]
atheism$nationality[10000]
atheism$nationality[12000]
atheism$nationality[14000]
atheism$nationality[13000]
atheism$nationality[13500]
atheism$nationality[19000]
atheism$nationality[20000]
atheism$nationality[21000]
atheism$nationality[25000]
atheism$nationality[29000]
atheism$nationality[32000]
atheism$nationality[36000]
atheism$nationality[39000]
atheism$nationality[44000]
atheism$nationality[45000]
atheism$nationality[46000]
inference
espanha = subset(atheism,atheism$nationality=="Spain")
inference(y = espanha$year,est="proportion",type="ci",method = "theoretical")
inference(y = espanha$year,x = espanha$response,est="proportion",type="ci",method = "theoretical",sucess = "atheist")
inference(y = espanha$year,x = espanha$response,est="proportion",type="ci",method = "theoretical",success = "atheist")
inference(y = espanha$year,x = espanha$response,est="mean",type="ci",method = "theoretical",success = "atheist")
inference(y = espanha$nationality,x = espanha$year,est="mean",type="ci",method = "theoretical",success = "atheist")
inference(y = espanha$response,x = espanha$year,est="mean",type="ci",method = "theoretical",success = "atheist")
inference(y = espanha$response,x = espanha$year,est="proportion",type="ci",method = "theoretical",success = "atheist")
inference(y = espanha$response,x = espanha$year,est="proportion",type="ht",method = "theoretical",success = "atheist")
inference(y = es$response, x = es$year, est = "proportion", type = "ht", method = "theoretical", success = "atheist", order = c("2005", "2012"), null = 0, alternative = "twosided")
inference(y = espanha$response, x = espanha$year, est = "proportion", type = "ht", method = "theoretical", success = "atheist", order = c("2005", "2012"), null = 0, alternative = "twosided")
usa = subset(atheism,atheism$nationality = "United States")
usa = subset(atheism,atheism$nationality == "United States")
inference(y = usa$response, x = usa$year, est = "proportion", type = "ht", method = "theoretical", success = "atheist", order = c("2005", "2012"), null = 0, alternative = "twosided")
download.file("http://www.openintro.org/stat/data/mlb11.RData", destfile = "mlb11.RData")
load("mlb11.RData")
summary(mlb11)
cor(mlb11$runs, mlb11$at_bats)
plot_ss
plot_ss(x=mlb11$at_bats, y = mlb11$runs)
plot_ss(x=mlb11$at_bats, y = mlb11$runs,showSquares = TRUE)
ml<- lm(mlb11$runs ~ mlb11$at_bats)
ml<- lm(runs ~ at_bats,data = mlb11)
ml
summary(ml)
plot(mlb11$runs ~ mlb11$at_bats)
abline(ml)
plot(ml$residuals~mlb11$at_bats)
abline(h=0,lty=3)
hist(ml$residuals)
qqnorm(ml$residuals)
qqline(ml$residuals)
m3 <- lm(runs ~ bat_avg, data = mlb11)
plot(mlb11$runs ~ mlb11$bat_avg, main = "Relationship3")
abline(m3)
m3 <- lm(runs ~ bat_avg, data = mlb11)
plot(mlb11$runs ~ mlb11$bat_avg, main = "Exercicio1")
abline(m3)
m2 <- lm(runs ~ at_bats, data = mlb11)
summary(m2)
m3 <- lm(runs ~ bat_avg, data = mlb11)
summary(m3)
m3 <- lm(runs ~ team, data = mlb11)
summary(m3)
mlb11$team
mlb11$hits
m3 <- lm(runs ~ hits, data = mlb11)
summary(m3)
mlb11$homeruns
m3 <- lm(runs ~ homeruns, data = mlb11)
summary(m3)
mlb11$strikeouts
m3 <- lm(runs ~ strikeouts, data = mlb11)
summary(m3)
mlb11$stolen_bases
m3 <- lm(runs ~ stolen_bases, data = mlb11)
summary(m3)
m3 <- lm(runs ~ bat_avg, data = mlb11)
hist(m3$residuals)
qqnorm(m3$residuals)
qqline(m3$residuals)
mnew_obs <- lm(runs ~ new_obs, data = mlb11)
mnew_slug <- lm(runs ~ new_slug, data = mlb11)
mnew_onbase <- lm(runs ~ new_onbase, data = mlb11)
summary(mnew_obs)
mnew_obs <- lm(runs ~ new_obs, data = mlb11)
mnew_slug <- lm(runs ~ new_slug, data = mlb11)
mnew_onbase <- lm(runs ~ new_onbase, data = mlb11)
summary(mnew_slug)
mnew_obs <- lm(runs ~ new_obs, data = mlb11)
mnew_slug <- lm(runs ~ new_slug, data = mlb11)
mnew_onbase <- lm(runs ~ new_onbase, data = mlb11)
summary(mnew_onbase)
mnew_obs <- lm(runs ~ new_obs, data = mlb11)
hist(mnew_obs$residuals)
qqnorm(mnew_obs$residuals)
qqline(mnew_obs$residuals)
setwd("C:/Users/Eduarda/Dropbox/LaCCAN/Time series data")
dados = Read_csv(2)
dados[1]
time_series(dados)
library(ggplot2)
library(ggplot2)
time_series(dados)
